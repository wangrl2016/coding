//
// Created by wangrl on 2021/3/18.
//

#include <cstdlib>
#include <cstring>

/**
 * 程序的内存分配
 *
 * 一个由C/C++编译的程序占用的内存分为以下几个部分
 *
 * 1. 栈区(Stack) - 由编译器自动分配释放，存放函数的参数值，局部变量的值等。
 *                  其操作方式类似于数据结构中的栈。
 * 2. 堆区(Heap) - 一般由程序员分配释放，若程序员不释放，程序结束时可能由OS
 *                回收，注意它和数据结构中的堆是两回事。
 * 3. 全局区/静态区 (static) - 全局变量和静态变量的存储是放在一块的，初始化的全局变量
 *                  和静态变量在一块区域，未初始化的全局变量和未初始化的静态变量在相邻的
 *                  另一块区域，程序结束后由OS释放。
 * 4. 文字常量区 - 常量字符串就是放在这里，程序结束后由系统释放。
 * 5. 程序代码区 - 存放函数体的二进制文件。
 */

int a = 0;      // 全局初始化区
char* p1;       // 全局未初始化区


int main(int argc, char** argv) {
    int b;                          // 栈
    char s[] = "abc";               // 栈
    char* p2;                       // 栈
    char* p3 = "123456";            // 123456\0在常量区, p3在栈上。
    static int c = 0;               // 全局(静态)初始化区域
    // 分配来的10和20字节的区域就在堆区
    p1 = (char*) malloc(10);
    // 123456\0放在常量区，编译器可能和p3所指向的优化成为一个地方。
    p2 = (char*) malloc(20);
    strcpy(p1, "123456");

    delete p1;
    delete p2;
}